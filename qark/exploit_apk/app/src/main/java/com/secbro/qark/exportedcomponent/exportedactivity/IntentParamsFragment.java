/*
 * Copyright 2015 LinkedIn Corp. Licensed under the Apache License, Version 2.0 (the "License");
 * You may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 */

 package com.secbro.qark.exportedcomponent.exportedactivity;

 import android.content.ComponentName;
 import android.content.Intent;
 import android.os.Bundle;
 import androidx.annotation.Nullable;
 import androidx.fragment.app.Fragment; // Updated to AndroidX
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Button;
 import android.widget.EditText;
 import android.widget.LinearLayout;
 import android.widget.TextView;
 import android.widget.Toast;
 
 import com.secbro.qark.R;
 
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.Map;
 
 public class IntentParamsFragment extends Fragment {
 
     private static final int REQUEST_CODE = 1;
     private static final String LOG_TAG = IntentParamsFragment.class.getSimpleName();
 
     public interface ActivityResultListener {
         void onActivityResultListener(Map<String, Object> resultMap);
     }
 
     private ActivityResultListener mListener;
     private ArrayList<String> keys;
     private String exportedActivityName;
     private String exportedActivityId;
 
     public IntentParamsFragment() {
         // Required empty public constructor
     }
 
     @Override
     public void onSaveInstanceState(Bundle outState) {
         super.onSaveInstanceState(outState);
         outState.putStringArrayList(IntentSenderActivity.INTENT_KEYS, keys);
         outState.putString(ExportedActivityListFragment.EXPORTED_ACTIVITY_NAME, exportedActivityName);
         outState.putString(ExportedActivityListFragment.EXPORTED_ACTIVITY_ID, exportedActivityId);
     }
 
     @Override
     public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
         return inflater.inflate(R.layout.fragment_exploit_exported_activity_params, container, false);
     }
 
     @Override
     public void onAttach(android.content.Context context) {
         super.onAttach(context);
         try {
             mListener = (ActivityResultListener) context;
         } catch (ClassCastException e) {
             throw new ClassCastException(context.toString() + " must implement ActivityResultListener.");
         }
     }
 
     @Override
     public void onDetach() {
         super.onDetach();
         mListener = null;
     }
 
     @Override
     public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
         if (savedInstanceState != null) {
             keys = savedInstanceState.getStringArrayList(IntentSenderActivity.INTENT_KEYS);
             exportedActivityName = savedInstanceState.getString(ExportedActivityListFragment.EXPORTED_ACTIVITY_NAME);
             exportedActivityId = savedInstanceState.getString(ExportedActivityListFragment.EXPORTED_ACTIVITY_ID);
         } else if (getArguments() != null) {
             keys = getArguments().getStringArrayList(IntentSenderActivity.INTENT_KEYS);
             exportedActivityName = getArguments().getString(ExportedActivityListFragment.EXPORTED_ACTIVITY_NAME);
             exportedActivityId = getArguments().getString(ExportedActivityListFragment.EXPORTED_ACTIVITY_ID);
         }
 
         if (keys == null || keys.isEmpty()) {
             throw new IllegalArgumentException("Keys cannot be null or empty.");
         }
 
         LinearLayout paramsLayout = requireView().findViewById(R.id.paramsLayout);
 
         for (String key : keys) {
             createKeyValuePairLayout(key, paramsLayout);
         }
 
         Button button = requireView().findViewById(R.id.submitButton);
         button.setOnClickListener(v -> sendIntent());
     }
 
     private void sendIntent() {
         try {
             Intent intent = new Intent();
             intent.setComponent(new ComponentName(getResources().getString(R.string.packageName), exportedActivityName));
             
             for (String key : keys) {
                 TextView keyTextView = requireView().findViewWithTag("key" + key);
                 EditText valueEditText = requireView().findViewWithTag("value" + key);
                 
                 if (keyTextView != null && valueEditText != null) {
                     intent.putExtra(keyTextView.getText().toString(), valueEditText.getText().toString());
                 }
             }
 
             startActivityForResult(intent, REQUEST_CODE);
             Toast.makeText(requireActivity(), "Intent sent", Toast.LENGTH_LONG).show();
         } catch (Exception e) {
             Log.e(LOG_TAG, "Error while sending intent: ", e);
             Toast.makeText(requireActivity(), "Error sending intent. Check logs for details.", Toast.LENGTH_LONG).show();
         }
     }
 
     private void createKeyValuePairLayout(String key, LinearLayout topLayout) {
         LinearLayout linearLayout = new LinearLayout(requireActivity());
         linearLayout.setOrientation(LinearLayout.HORIZONTAL);
 
         TextView keyTextView = new TextView(requireActivity());
         keyTextView.setTag("key" + key);
         keyTextView.setText(key);
         keyTextView.setLayoutParams(new LinearLayout.LayoutParams(
                 ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT));
 
         EditText valueEditText = new EditText(requireActivity());
         valueEditText.setTag("value" + key);
         valueEditText.setLayoutParams(new LinearLayout.LayoutParams(
                 ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
 
         linearLayout.addView(keyTextView);
         linearLayout.addView(valueEditText);
         topLayout.addView(linearLayout);
     }
 
     @Override
     public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
         if (requestCode == REQUEST_CODE && resultCode == Activity.RESULT_OK && data != null) {
             Map<String, Object> resultMap = new HashMap<>();
             Bundle bundle = data.getExtras();
             
             if (bundle != null) {
                 for (String key : bundle.keySet()) {
                     Object value = bundle.get(key);
                     Log.d(LOG_TAG, "Key: " + key + ", Value: " + value);
                     resultMap.put(key, value);
                 }
             }
             
             if (mListener != null) {
                 mListener.onActivityResultListener(resultMap);
             } else {
                 Log.e(LOG_TAG, "mListener is null. Cannot return result.");
             }
         } else {
             Log.d(LOG_TAG, "No data received from intent.");
         }
     }
 }
 