/*
 * Copyright 2015 LinkedIn Corp. Licensed under the Apache License, Version 2.0 (the "License");
 * You may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 */

 package com.secbro.qark.exportedcomponent.exportedactivity;

 import android.app.Activity;
 import android.content.ComponentName;
 import android.content.Intent;
 import android.os.Bundle;
 import android.util.Log;
 import android.widget.TextView;
 
 import androidx.appcompat.app.AppCompatActivity; // Migrated to AndroidX
 import androidx.fragment.app.FragmentActivity; // Migrated to AndroidX
 
 import com.secbro.qark.R;
 
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.HashMap;
 import java.util.Map;
 
 public class IntentSenderActivity extends AppCompatActivity implements IntentParamsFragment.ActivityResultListener {
 
     public static final String INTENT_KEYS = "INTENT_KEYS";
     private static final int REQUEST_CODE = 2;
 
     private ArrayList<String> intentKeys;
     private String exportedActivityName;
     private String exportedActivityId;
     private TextView mResultText;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_exploit_exported_result);
 
         mResultText = findViewById(R.id.activity_exploit_exported_result_text);
         intentKeys = new ArrayList<>();
 
         if (getIntent() != null) {
             exportedActivityId = getIntent().getStringExtra(ExportedActivityListFragment.EXPORTED_ACTIVITY_ID);
             exportedActivityName = getIntent().getStringExtra(ExportedActivityListFragment.EXPORTED_ACTIVITY_NAME);
 
             int resourceId = getResources().getIdentifier(exportedActivityId, "array", getPackageName());
             if (resourceId != 0) {
                 intentKeys.addAll(Arrays.asList(getResources().getStringArray(resourceId)));
             }
         }
 
         if (!intentKeys.isEmpty()) {
             // If the exported activity needs intent params to be passed, pass them from UI
             Bundle keys = new Bundle();
             keys.putString(ExportedActivityListFragment.EXPORTED_ACTIVITY_NAME, exportedActivityName);
             keys.putString(ExportedActivityListFragment.EXPORTED_ACTIVITY_ID, exportedActivityId);
             keys.putStringArrayList(INTENT_KEYS, intentKeys);
 
             IntentParamsFragment fragment = new IntentParamsFragment();
             fragment.setArguments(keys);
 
             if (savedInstanceState == null) {
                 getSupportFragmentManager().beginTransaction()
                         .add(R.id.container, fragment)
                         .commit();
             }
         } else {
             Log.d("INFO", "Exported activity needs no params. Launching directly.");
             launchActivityWithoutParams();
         }
     }
 
     private void launchActivityWithoutParams() {
         try {
             Intent intent = new Intent();
             intent.setComponent(new ComponentName(getString(R.string.packageName), exportedActivityName));
             startActivityForResult(intent, REQUEST_CODE);
         } catch (Exception e) {
             Log.e("ERROR", "Failed to launch exported activity", e);
         }
     }
 
     @Override
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
 
         if (requestCode == REQUEST_CODE) {
             if (resultCode == Activity.RESULT_OK && data != null) {
                 Map<String, Object> resultMap = new HashMap<>();
                 Bundle bundle = data.getExtras();
 
                 if (bundle != null) {
                     for (String key : bundle.keySet()) {
                         Object value = bundle.get(key);
                         Log.d("RESULT", "Key: " + key + ", Value: " + value);
                         resultMap.put(key, value);
                     }
                     showResultFromExploit(resultMap);
                 }
             } else {
                 Log.d("INFO", "No data received or result not OK");
             }
         }
     }
 
     @Override
     public void onActivityResultListener(Map<String, Object> resultMap) {
         showResultFromExploit(resultMap);
     }
 
     private void showResultFromExploit(Map<String, Object> resultMap) {
         if (mResultText != null) {
             mResultText.setText(resultMap.toString());
         } else {
             Log.e("ERROR", "TextView to show results is null");
         }
     }
 }
 