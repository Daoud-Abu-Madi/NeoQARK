/*
 * Copyright 2015 LinkedIn Corp. Licensed under the Apache License, Version 2.0 (the "License");
 * You may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 */

 package com.secbro.qark.customintent;

 import android.annotation.SuppressLint;
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.net.Uri;
 import android.os.Bundle;
 import androidx.appcompat.app.AlertDialog;
 import androidx.appcompat.app.AppCompatActivity;
 import android.text.TextUtils;
 import android.util.Log;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ArrayAdapter;
 import android.widget.AutoCompleteTextView;
 import android.widget.Button;
 import android.widget.EditText;
 import android.widget.ImageButton;
 import android.widget.LinearLayout;
 import android.widget.TextView;
 import com.secbro.qark.R;
 import java.util.ArrayList;
 
 public class CreateCustomIntentActivity extends AppCompatActivity {
 
     public static final String CUSTOM_INTENT_EXTRA = "CustomIntent";
 
     private AutoCompleteTextView extrasKey, intentAction, intentCategory, intentFlags;
     private EditText intentData, extrasValue, componentName, componentPackageName;
     private ImageButton addMoreExtras;
     private Button nextButton;
     private Intent customIntent;
     private AlertDialog errorDialog;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_create_custom_intent);
 
         // Initialize views
         componentName = findViewById(R.id.intent_component_name);
         componentPackageName = findViewById(R.id.intent_component_package_name);
         intentAction = findViewById(R.id.intent_action_text_view);
         intentData = findViewById(R.id.intent_data);
         intentCategory = findViewById(R.id.intent_category_text_view);
         intentFlags = findViewById(R.id.intent_flags_text_view);
         extrasKey = findViewById(R.id.key1);
         extrasValue = findViewById(R.id.value1);
         addMoreExtras = findViewById(R.id.add_more_extras_button);
         nextButton = findViewById(R.id.activity_create_custom_intent_next_button);
 
         setupAutoComplete(intentAction, R.array.intent_actions_array);
         setupAutoComplete(intentCategory, R.array.intent_category_array);
         setupAutoComplete(intentFlags, R.array.intent_flags_array);
         setupAutoComplete(extrasKey, R.array.intent_extras_array);
 
         addMoreExtras.setOnClickListener(v -> createExtrasView());
 
         nextButton.setOnClickListener(v -> {
             createIntentFromFormData();
             Intent nextIntent = new Intent(CreateCustomIntentActivity.this, ChooseIntentUseCaseActivity.class);
             nextIntent.putExtra(CUSTOM_INTENT_EXTRA, customIntent);
             startActivity(nextIntent);
         });
     }
 
     private void setupAutoComplete(AutoCompleteTextView view, int arrayResource) {
         ArrayAdapter<String> adapter = new ArrayAdapter<>(this,
                 android.R.layout.simple_dropdown_item_1line, getResources().getStringArray(arrayResource));
         view.setAdapter(adapter);
         view.setSelection(view.getText().length());
         view.setOnTouchListener((paramView, paramMotionEvent) -> {
             view.showDropDown();
             view.requestFocus();
             return false;
         });
     }
 
     private void createIntentFromFormData() {
         customIntent = new Intent();
 
         if (!TextUtils.isEmpty(componentName.getText()) && !TextUtils.isEmpty(componentPackageName.getText())) {
             customIntent.setClassName(componentPackageName.getText().toString(), componentName.getText().toString());
         }
 
         if (!TextUtils.isEmpty(intentAction.getText())) {
             customIntent.setAction(intentAction.getText().toString());
         }
 
         if (!TextUtils.isEmpty(intentData.getText())) {
             customIntent.setData(Uri.parse(intentData.getText().toString()));
         }
 
         if (!TextUtils.isEmpty(intentCategory.getText())) {
             customIntent.addCategory(intentCategory.getText().toString());
         }
 
         if (!TextUtils.isEmpty(intentFlags.getText())) {
             try {
                 customIntent.setFlags(Integer.parseInt(intentFlags.getText().toString()));
             } catch (NumberFormatException e) {
                 Log.e("CreateCustomIntent", "Invalid flag format");
             }
         }
 
         populateExtrasKeyValuePairs();
     }
 
     private void populateExtrasKeyValuePairs() {
         ViewGroup extrasContainer = findViewById(R.id.extras_key_value_container);
         ArrayList<String> keys = new ArrayList<>();
         ArrayList<String> values = new ArrayList<>();
 
         findAllKeys(keys, extrasContainer);
         findAllValues(values, extrasContainer);
 
         if (keys.size() != values.size()) {
             showErrorDialog("Intent extras key value do not match in number");
         } else {
             for (int i = 0; i < keys.size(); i++) {
                 Log.d("Extras key/value pair", keys.get(i) + "/" + values.get(i));
                 customIntent.putExtra(keys.get(i), values.get(i));
             }
         }
     }
 
     private void showErrorDialog(String message) {
         errorDialog = new AlertDialog.Builder(this)
                 .setTitle("Error")
                 .setMessage(message)
                 .setNeutralButton("OK", (dialog, which) -> dialog.dismiss())
                 .create();
         errorDialog.show();
     }
 
     private ArrayList<String> findAllKeys(ArrayList<String> keys, ViewGroup viewGroup) {
         int count = viewGroup.getChildCount();
         for (int i = 0; i < count; i++) {
             View view = viewGroup.getChildAt(i);
             if (view instanceof ViewGroup) {
                 findAllKeys(keys, (ViewGroup) view);
             } else if (view instanceof TextView && "key_field".equals(view.getTag())) {
                 keys.add(((TextView) view).getText().toString());
             }
         }
         return keys;
     }
 
     private ArrayList<String> findAllValues(ArrayList<String> values, ViewGroup viewGroup) {
         int count = viewGroup.getChildCount();
         for (int i = 0; i < count; i++) {
             View view = viewGroup.getChildAt(i);
             if (view instanceof ViewGroup) {
                 findAllValues(values, (ViewGroup) view);
             } else if (view instanceof EditText && "value_field".equals(view.getTag())) {
                 values.add(((EditText) view).getText().toString());
             }
         }
         return values;
     }
 
     private void createExtrasView() {
         LinearLayout topLayout = findViewById(R.id.extras_key_value_container);
 
         LinearLayout.LayoutParams llpTextView = new LinearLayout.LayoutParams(
                 ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
         llpTextView.setMargins(10, 20, 10, 10);
 
         LinearLayout.LayoutParams llpEditText = new LinearLayout.LayoutParams(
                 ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);
         llpEditText.setMargins(10, 20, 10, 10);
 
         LinearLayout keyLinearLayout = new LinearLayout(this);
         keyLinearLayout.setOrientation(LinearLayout.HORIZONTAL);
         TextView keyTextView = new TextView(this);
         keyTextView.setText(getString(R.string.intent_extras_key));
         keyTextView.setLayoutParams(llpTextView);
         AutoCompleteTextView keyEditText = new AutoCompleteTextView(this);
         keyEditText.setLayoutParams(llpEditText);
         keyEditText.setAdapter(new ArrayAdapter<>(this, android.R.layout.simple_dropdown_item_1line,
                 getResources().getStringArray(R.array.intent_extras_array)));
         keyEditText.setTag("key_field");
         keyLinearLayout.addView(keyTextView);
         keyLinearLayout.addView(keyEditText);
 
         LinearLayout valueLinearLayout = new LinearLayout(this);
         valueLinearLayout.setOrientation(LinearLayout.HORIZONTAL);
         TextView valueTextView = new TextView(this);
         valueTextView.setText(getString(R.string.intent_extras_value));
         valueTextView.setLayoutParams(llpTextView);
         EditText valueEditText = new EditText(this);
         valueEditText.setTag("value_field");
         valueEditText.setLayoutParams(llpEditText);
         valueLinearLayout.addView(valueTextView);
         valueLinearLayout.addView(valueEditText);
 
         topLayout.addView(keyLinearLayout);
         topLayout.addView(valueLinearLayout);
     }
 }
 