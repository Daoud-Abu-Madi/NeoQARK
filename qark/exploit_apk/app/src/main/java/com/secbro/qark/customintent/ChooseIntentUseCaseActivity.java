/*
 * Copyright 2015 LinkedIn Corp. Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 */

 package com.secbro.qark.customintent;

 import android.content.DialogInterface;
 import android.content.Intent;
 import android.os.Bundle;
 import androidx.appcompat.app.AlertDialog;
 import androidx.appcompat.app.AppCompatActivity;
 import android.view.View;
 import android.widget.ArrayAdapter;
 import android.widget.Button;
 import android.widget.Spinner;
 
 import com.secbro.qark.R;
 
 public class ChooseIntentUseCaseActivity extends AppCompatActivity {
 
     private static final int START_ACTIVITY_FOR_RESULT = 1;
     private Spinner usecaseSpinner;
     private Button sendIntentButton;
     private AlertDialog errorDialog;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_choose_intent_use_case);
 
         final Intent customIntent = getIntent().getParcelableExtra(CreateCustomIntentActivity.CUSTOM_INTENT_EXTRA);
 
         if (customIntent == null) {
             throw new IllegalArgumentException("customIntent is null");
         }
 
         // Initialize Spinner using View Binding
         usecaseSpinner = findViewById(R.id.intent_use_case_spinner);
         ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(
                 this, R.array.intent_use_case, android.R.layout.simple_spinner_item);
         adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
         usecaseSpinner.setAdapter(adapter);
 
         // Send intent button
         sendIntentButton = findViewById(R.id.activity_choose_intent_use_case_send_button);
 
         // Error Dialog
         errorDialog = new AlertDialog.Builder(this)
                 .setTitle("Error")
                 .setNeutralButton("OK", (dialog, which) -> dialog.dismiss())
                 .create();
 
         sendIntentButton.setOnClickListener(v -> {
             if (usecaseSpinner.getSelectedItem() == null) {
                 errorDialog.setMessage("Invalid intent use case");
                 errorDialog.show();
             } else {
                 String useCase = usecaseSpinner.getSelectedItem().toString();
                 handleUseCase(customIntent, useCase);
             }
         });
     }
 
     private void handleUseCase(Intent customIntent, String useCase) {
         switch (useCase) {
             case "startActivity":
                 startActivity(customIntent);
                 break;
             case "startActivityForResult":
                 startActivityForResult(customIntent, START_ACTIVITY_FOR_RESULT);
                 break;
             case "startService":
                 startService(customIntent);
                 break;
             case "bindService":
                 // TODO: Implement bindService logic
                 break;
             case "sendBroadcast":
                 sendBroadcast(customIntent);
                 break;
             case "sendOrderedBroadcast":
                 // TODO: Implement sendOrderedBroadcast logic
                 break;
             case "sendStickyBroadcast":
                 // Deprecated: sendStickyBroadcast should be avoided
                 errorDialog.setMessage("sendStickyBroadcast is deprecated and not recommended.");
                 errorDialog.show();
                 break;
             default:
                 errorDialog.setMessage("Unknown use case.");
                 errorDialog.show();
                 break;
         }
     }
 
     @Override
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         if (requestCode == START_ACTIVITY_FOR_RESULT && resultCode == RESULT_OK) {
             AlertDialog result = new AlertDialog.Builder(this)
                     .setTitle("Result from startActivityForResult()")
                     .setMessage(data.getDataString())
                     .setNeutralButton("OK", (dialog, which) -> dialog.dismiss())
                     .create();
             result.show();
         }
     }
 }
 