/*
 * Copyright 2015 LinkedIn Corp. Licensed under the Apache License, Version 2.0 (the "License");
 * You may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 */

 package com.secbro.qark.exportedcomponent.exportedactivity;

 import android.content.Intent;
 import android.os.Bundle;
 import androidx.fragment.app.ListFragment; // Migrated to AndroidX
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ArrayAdapter;
 import android.widget.ListView;
 
 import com.secbro.qark.R;
 import com.secbro.qark.exportedcomponent.exportedreceiver.ExportedReceiverListFragment;
 
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
 
 public class ExportedActivityListFragment extends ListFragment {
     private static final String LOG_TAG = ExportedActivityListFragment.class.getSimpleName();
     public static final String EXPORTED_ACTIVITY_NAME = "ExportedActivityName";
     public static final String EXPORTED_ACTIVITY_ID = "ExportedActivityId";
 
     private List<String> exportedActivities;
     private Map<String, String> exportedActivitiesIdNameMap;
 
     /**
      * The fragment's ListView/GridView.
      */
     private ListView mListView;
 
     public static ExportedReceiverListFragment newInstance() {
         return new ExportedReceiverListFragment();
     }
 
     /**
      * Mandatory empty constructor for the fragment manager to instantiate the
      * fragment (e.g., upon screen orientation changes).
      */
     public ExportedActivityListFragment() {
     }
 
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
         super.onCreateView(inflater, container, savedInstanceState);
 
         View view = inflater.inflate(R.layout.fragment_exported_activity_list, container, false);
         mListView = view.findViewById(android.R.id.list);
         return view;
     }
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
         exportedActivities = Arrays.asList(getResources().getStringArray(R.array.exportedActivities));
 
         if (exportedActivities != null && !exportedActivities.isEmpty()) {
             exportedActivitiesIdNameMap = new LinkedHashMap<>();
             for (String activity : exportedActivities) {
                 int resourceId = getResources().getIdentifier(activity, "string", requireActivity().getPackageName());
                 if (resourceId != 0) {
                     exportedActivitiesIdNameMap.put(activity, getResources().getString(resourceId));
                 } else {
                     Log.e(LOG_TAG, "No matching exportedActivities names found in string.xml for: " + activity);
                 }
             }
 
             setListAdapter(new ArrayAdapter<>(requireActivity(),
                     android.R.layout.simple_list_item_1, android.R.id.text1,
                     new ArrayList<>(exportedActivitiesIdNameMap.values())));
         } else {
             Log.d(LOG_TAG, "No exported activities to exploit");
         }
     }
 
     @Override
     public void onListItemClick(ListView l, View v, int position, long id) {
         super.onListItemClick(l, v, position, id);
 
         String activityName = exportedActivities.get(position);
         String activityLabel = exportedActivitiesIdNameMap.get(activityName);
 
         if (activityLabel == null) {
             Log.e(LOG_TAG, "Invalid activity selection: " + activityName);
             return;
         }
 
         Intent startActivityIntent = new Intent(requireActivity(), IntentSenderActivity.class);
         startActivityIntent.putExtra(EXPORTED_ACTIVITY_NAME, activityLabel);
         startActivityIntent.putExtra(EXPORTED_ACTIVITY_ID, activityName);
         startActivity(startActivityIntent);
     }
 }
 