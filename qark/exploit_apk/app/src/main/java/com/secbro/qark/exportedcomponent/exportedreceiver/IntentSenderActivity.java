/*
 * Copyright 2015 LinkedIn Corp. Licensed under the Apache License, Version 2.0 (the "License");
 * You may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 */

 package com.secbro.qark.exportedcomponent.exportedreceiver;

 import android.content.Intent;
 import android.os.Bundle;
 import android.util.Log;
 import android.widget.Toast;
 
 import androidx.appcompat.app.AppCompatActivity; // Migrated to AndroidX
 
 import com.secbro.qark.R;
 import com.secbro.qark.exportedcomponent.exportedactivity.ExportedActivityListFragment;
 
 import java.util.ArrayList;
 import java.util.Arrays;
 
 public class IntentSenderActivity extends AppCompatActivity {
     public static final String INTENT_KEYS = "INTENT_KEYS";
 
     private ArrayList<String> intentKeys;
     private String exportedReceiverName;
     private String exportedReceiverId;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_intent_sender);
 
         intentKeys = new ArrayList<>();
 
         if (getIntent() != null) {
             exportedReceiverId = getIntent().getStringExtra(ExportedReceiverListFragment.EXPORTED_RECEIVER_ID);
             exportedReceiverName = getIntent().getStringExtra(ExportedReceiverListFragment.EXPORTED_RECEIVER_NAME);
 
             try {
                 int resourceId = getResources().getIdentifier(exportedReceiverId, "array", getPackageName());
                 if (resourceId != 0) {
                     intentKeys.addAll(Arrays.asList(getResources().getStringArray(resourceId)));
                 }
             } catch (Exception e) {
                 Log.e("ERROR", "Error accessing resources: ", e);
             }
         }
 
         if (!intentKeys.isEmpty()) {
             // If the exported receiver needs intent params, pass them using Bundle
             Bundle keys = new Bundle();
             keys.putString(ExportedReceiverListFragment.EXPORTED_RECEIVER_NAME, exportedReceiverName);
             keys.putString(ExportedReceiverListFragment.EXPORTED_RECEIVER_ID, exportedReceiverId);
             keys.putStringArrayList(INTENT_KEYS, intentKeys);
 
             IntentSenderFragment intentSenderFragment = new IntentSenderFragment();
             intentSenderFragment.setArguments(keys);
 
             if (savedInstanceState == null) {
                 getSupportFragmentManager().beginTransaction()
                         .add(R.id.container, intentSenderFragment)
                         .commit();
             }
         } else {
             Log.d("INFO", "Exported receiver needs no params. Sending broadcast.");
 
             try {
                 Intent intent = new Intent();
                 intent.setAction(exportedReceiverName);
                 sendBroadcast(intent);
                 Toast.makeText(this, "Intent sent successfully", Toast.LENGTH_LONG).show();
             } catch (Exception e) {
                 Log.e("ERROR", "Failed to send broadcast", e);
                 Toast.makeText(this, "Failed to send intent", Toast.LENGTH_LONG).show();
             }
         }
     }
 }
 